<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>Oracle 数据库服务停启</title>
      <link href="/2018/02/23/Oracle-%E6%95%B0%E6%8D%AE%E5%BA%93%E6%9C%8D%E5%8A%A1%E5%81%9C%E5%90%AF/"/>
      <url>/2018/02/23/Oracle-%E6%95%B0%E6%8D%AE%E5%BA%93%E6%9C%8D%E5%8A%A1%E5%81%9C%E5%90%AF/</url>
      <content type="html"><![CDATA[<h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>数据库服务宕掉该如何重启</p><a id="more"></a><h3 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h3><h4 id="查看数据库状态"><a href="#查看数据库状态" class="headerlink" title="查看数据库状态"></a>查看数据库状态</h4><pre><code>sqlplus / as sysdbaSELECT status FROM V$INSTANCE;</code></pre><p>查询报：<code>ORA-01034</code>则表示数据库服务未启动</p><h4 id="数据库服务关闭"><a href="#数据库服务关闭" class="headerlink" title="数据库服务关闭"></a>数据库服务关闭</h4><ol><li>SHUTDOWN IMMEDIATE<br>会中断正在执行的SQL语句，并将未提交的事务进行回滚，断开所有连接的用户</li><li>SHUTDOWN NORMAL<br>不允许新建连接，等待现有连接用户全部退出之后才关闭数据库。下次启动不需要进行任何实例恢复。</li><li><p>SHUTDOWN ABORT<br>类似于强制关闭，会中断正在执行的SQL语句，且不回滚未提交的事务。下次启动时需要进行实例恢复，启动时可能耗时较长。一般在如下场景使用该命令：  </p><ol><li>数据库处于一种非正常工作状态，不能用shutdown normal或者shutdown immediate这样的命令关闭数据库;</li><li>需要立即关闭数据库；</li><li>在启动数据库实例时遇到问题；</li></ol></li></ol><p>有关于checkPoint的知识点尚未接触，暂无。</p><h4 id="数据库服务启动"><a href="#数据库服务启动" class="headerlink" title="数据库服务启动"></a>数据库服务启动</h4><ol><li>STARTUP NOMOUNT<br>仅创建一个oracle实例，读取init.ora初始化参数文件、启动后台进程、初始化系统全局区（SGA）。需要继续执行以下命令才能打开数据库：<pre><code>ALTER DATABASE MOUNT;ALTER DATABASE OPEN;</code></pre></li><li>STARTUP MOUNT<br>创建实例并且挂载数据库，但没有打开数据库。 需要继续执行以下命令才能打开数据库：<pre><code>ALTER DATABASE OPEN;</code></pre></li><li>STARTUP<br>该命令包含：创建实例、挂载实例、打开数据库的所有步骤。成功结束后数据库系统便处于正常工作状态，可以接受用户请求。<br><img src="https://github.com/francisXKF/francisXKF.github.io/tree/master/images/orcle-startup.png" alt="STARTUP启动成功"></li></ol><h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><p><a href="https://www.cnblogs.com/guohu/p/4253418.html" target="_blank" rel="noopener">Oracle数据库实例的启动及关闭</a></p>]]></content>
      
      
        <tags>
            
            <tag> Oracle </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>OGG服务同步数据</title>
      <link href="/2018/02/10/OGG%E6%9C%8D%E5%8A%A1%E5%90%8C%E6%AD%A5%E6%95%B0%E6%8D%AE/"/>
      <url>/2018/02/10/OGG%E6%9C%8D%E5%8A%A1%E5%90%8C%E6%AD%A5%E6%95%B0%E6%8D%AE/</url>
      <content type="html"><![CDATA[<h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>想要通过OGG方式实现正式库的修改数据同步到备库中<br>前提：  </p><ul><li>Oracle 10g</li><li>OGG服务已安装</li><li>两个数据库已有相同用户</li><li>待同步的表已完成主备一致</li></ul><h3 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h3><ul><li><p>问题1：连接备库时，报<code>ora-12514 监听程序无法识别连接操作符中请求的服务</code><br>解决：查看<code>$ORACLE_HOME/network/admin</code>目录下没有<code>listener.ora</code>文件，参考其他数据库主机配置，新建了该文件，并写入以下内容，执行<code>lsnrctl status</code>查看监听状态，<code>lsnrctl stop</code>停止监听，<code>lsnrctl start</code>启动监听：</p><pre><code># listener.ora Network Configuration File: /oracle/product/10.2.0/network/admin/listener.ora# Generated by Oracle configuration tools.SID_LIST_LISTENER =  (SID_LIST =    (SID_DESC =      (SID_NAME = DBSID)      (ORACLE_HOME = ORACLE_HOME)    )  )LISTENER =  (DESCRIPTION_LIST =    (DESCRIPTION =      (ADDRESS = (PROTOCOL = TCP)(HOST = HOST_IP)(PORT = 1521))      (ADDRESS = (PROTOCOL = IPC)(KEY = DBSID))    )  )</code></pre><p>其中：</p><ul><li><code>SID_NAME</code>处，DBSID为Oracle实例iD，可以通过<code>echo $ORACLE_SID</code>来查看，若该环境变量未配置，可以通过<code>ps -ef | grep ora_</code>查看最后一个单词来进行分析</li><li><code>ORACLE_HOME</code>处，ORACLE_HOME应填上具体路径，与<code>echo $ORACLE_HOME</code>相同</li><li><code>HOST</code>处，填写数据库主机IP，如<code>10.131.23.10</code></li><li><code>KEY = DBSID</code>处，DBSID与<code>SID_NAME</code>处填写的一致</li></ul></li><li><p>问题2：报<code>ORA-01034</code>和<code>ORA-27101</code><br>解决：基本就是数据库挂了，需要使用oracle用户登录主机，使用sysdba登录数据库，启动数据库</p><pre><code>sqlplus / as sysdba # 使用sysdba登录数据库startup # 启动数据库</code></pre></li><li><p>问题3：执行./ggsci时报<code>libnnz10.so No such file or directory</code><br>解决：由于环境变量中没有加入<code>$ORACLE_HOME/lib</code>导致</p><pre><code>export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$ORACLE_HOME/lib</code></pre></li><li><p>问题4：启动OGG服务<br>解决：</p><pre><code># 启动cd $GG_HOME./ggscistart mgrstart *# 停止stop *stop mgr</code></pre></li><li><p>问题5：OGG服务启动后，修改正式库表记录，但备库未同步<br>解决：由于replicat服务ABENDED导致不同步，需要修改读检查点和写检查点，尚未完成学习</p></li><li><p>问题6：replicat服务ABENDED<br>解决：通过以下命令找到出问题的点：</p><pre><code>info allinfo REP_group #REP_group为要查询的REPLICAT的GROUP名sh more ggserr.log #查看日志文件</code></pre><p>可以键入v进入vim视图，通过G来到达最后一行查看最近报错信息。</p></li><li><p>问题7：查看REPLICAT进程的参数设置与状态  </p><pre><code>view params REP_group #REP_group为要查询的REPLICAT的GROUP名info REP_group detail #可以查看Error log文件的位置等</code></pre><p>详细可以看参考文章的<a href="http://blog.csdn.net/lqx0405/article/details/44777515" target="_blank" rel="noopener">Oracle GoldenGate学习之–GoldenGate的监控</a></p></li><li><p>问题8：处理ABANDON状态进程</p><pre><code>./ggsciinfo allinfo REP_groupsh ls ./dirrpt -l #查看最近程序执行的日志文件名sh more ./dirrpt/rep_group.dsc #查看最近日志文件内容，一般含有异常记录的描述./logdumpopen ./dirdat/jz000012 #进入logdump查看最近检查点alter replicat rep_group,extseqno 19,extrba 15042355 #修改检查点stop *start *</code></pre></li></ul><p>Tips：若能确认abandon状态中源主机没有任何操作，或许可以直接将检查点修改为<code>info REP_GROUP</code>里展示的检查点，19对应File的后缀，extrba对应RBA：</p><blockquote><p>Log Read Checkpoint  File ./dirdat/jz000019<br>                    2018-03-12 10:22:49.678621  RBA 15042355</p></blockquote><h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><p><a href="http://blog.csdn.net/u013519551/article/details/53485342" target="_blank" rel="noopener">ORA-01034和ORA-27101的解决方法</a><br><a href="http://blog.sina.com.cn/s/blog_6f7b73770101b6l5.html" target="_blank" rel="noopener">解决 ORA-12514: TNS: 监听程序当前无法识别连接描述符中请求的服务</a><br><a href="http://blog.csdn.net/eviswang/article/details/51034727" target="_blank" rel="noopener">./ggsci: error while loading shared libraries: libnnz11.so: cannot open shared object file: No such</a><br><a href="http://blog.csdn.net/lqx0405/article/details/44777515" target="_blank" rel="noopener">Oracle GoldenGate学习之–GoldenGate的监控</a><br><a href="http://blog.csdn.net/lbyyy/article/details/51775478" target="_blank" rel="noopener">OGG故障排除1例：因B机被修改数据导致replicat服务ABENDED修复</a><br><a href="https://www.cnblogs.com/tan-java/p/5613248.html" target="_blank" rel="noopener">ogg logdump工具使用介绍</a></p>]]></content>
      
      
        <tags>
            
            <tag> Oracle </tag>
            
            <tag> 数据库 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>hexo+github简单命令</title>
      <link href="/2018/02/10/hexo-github%E7%AE%80%E5%8D%95%E5%91%BD%E4%BB%A4/"/>
      <url>/2018/02/10/hexo-github%E7%AE%80%E5%8D%95%E5%91%BD%E4%BB%A4/</url>
      <content type="html"><![CDATA[<h3 id="简单命令"><a href="#简单命令" class="headerlink" title="简单命令"></a>简单命令</h3><h4 id="创建文章、标签等"><a href="#创建文章、标签等" class="headerlink" title="创建文章、标签等"></a>创建文章、标签等</h4><ul><li>hexo new “postName” #新建文章</li><li>hexo new page “pageName” #新建页面</li></ul><h4 id="修改文章发布、同步到github等"><a href="#修改文章发布、同步到github等" class="headerlink" title="修改文章发布、同步到github等"></a>修改文章发布、同步到github等</h4><ul><li>hexo p == hexo publish</li><li>hexo g == hexo generate #生成</li><li>hexo s == hexo server #启动服务预览</li><li>hexo d == hexo deploy # 部署到github</li></ul><h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><p><a href="https://segmentfault.com/a/1190000002632530" target="_blank" rel="noopener">hexo常用命令笔记</a><br><a href="https://segmentfault.com/q/1010000002561642" target="_blank" rel="noopener">hexo分类与tags配置</a></p>]]></content>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>lambda实现switch</title>
      <link href="/2018/02/08/lambda%E5%AE%9E%E7%8E%B0switch/"/>
      <url>/2018/02/08/lambda%E5%AE%9E%E7%8E%B0switch/</url>
      <content type="html"><![CDATA[<h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>根据输入的条件符号，对两个输入的数字进行表达式判断</p><h3 id="方案"><a href="#方案" class="headerlink" title="方案"></a>方案</h3><p>查了查网上资料，总体有三种方案实现：<br>1、<strong>字典+函数</strong><br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">funcA</span><span class="params">(x)</span></span><span class="symbol">:</span></span><br><span class="line">    <span class="keyword">return</span> x</span><br><span class="line">...</span><br><span class="line">funcDict&#123;</span><br><span class="line">    <span class="string">'A'</span> : funcA,</span><br><span class="line">    <span class="string">'B'</span> : funcB,</span><br><span class="line">    <span class="string">'C'</span> : funcC</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># 调用</span></span><br><span class="line">funcDict.get(value, funcDefault)(x)</span><br></pre></td></tr></table></figure></p><p>2、<strong>字典+lambda</strong><br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">lambdaDict&#123;</span><br><span class="line"><span class="code">    'A' : lambda x : x,</span></span><br><span class="line"><span class="code">    'B' : lambda x : x,</span></span><br><span class="line"><span class="code">    'C' : lambda x : x</span></span><br><span class="line">&#125;[<span class="string">value</span>](<span class="link">x</span>)</span><br></pre></td></tr></table></figure></p><p>3、Brian Beck提供了一个类 switch 来实现其他语言中switch的功能</p><p>由于要实现的功能是两个数之间根据输入的表达式来进行比较，所以选择了写起来比较简洁（自认为简洁）的lambda<br><strong>样例</strong><br><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">def opJudge(processCnt, op, expectCnt):</span><br><span class="line">    judgeAns = &#123;</span><br><span class="line">        <span class="string">'='</span> : <span class="type">lambda</span> x, y : <span class="type">x</span> == y,</span><br><span class="line">        <span class="string">'&gt;'</span> : <span class="type">lambda</span> x, y : <span class="type">x</span> &gt; y,</span><br><span class="line">        <span class="string">'&lt;'</span> : <span class="type">lambda</span> x, y : <span class="type">x</span> &lt; y,</span><br><span class="line">        '&gt;=' : <span class="type">lambda</span> x, y : <span class="type">x</span> &gt;= y,</span><br><span class="line">        '&lt;=' : <span class="type">lambda</span> x, y : <span class="type">x</span> &lt;= y,</span><br><span class="line">        '!=' : <span class="type">lambda</span> x, y : <span class="type">x</span> != y,</span><br><span class="line">    &#125;[op](processCnt, expectCnt)</span><br><span class="line">    <span class="keyword">return</span> judgeAns</span><br></pre></td></tr></table></figure></p><p><small>写的时候对lambda的认识：lambda后面紧跟的是<strong>形参</strong>，就是func(x, y)里面的x、y，冒号后面的是<strong>方法</strong>，就是func(…){method}里面的method</small></p><h4 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h4><p><a href="http://blog.csdn.net/suiyunonghen/article/details/3734135" target="_blank" rel="noopener">Python中Swithch Case语法实现</a><br><a href="http://blog.csdn.net/mathboylinlin/article/details/9413551" target="_blank" rel="noopener">Python学习笔记（十二）：lambda表达式与函数式编程</a></p>]]></content>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> lambda </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>FirstBlog</title>
      <link href="/2018/02/08/FirstBlog/"/>
      <url>/2018/02/08/FirstBlog/</url>
      <content type="html"><![CDATA[]]></content>
      
      
    </entry>
    
  
  
</search>
